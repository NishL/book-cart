// Hide the notice when an item is added to a cart.
// When we come to the store for the first time, there's nothing in the flash, so the paragraph with the ID of `notice` isn't
// display, so there's no tag with an ID of notice. The jQuery call matches no elements, which isn't a problem because the call
// to `hide()` is only apploed to each matching element.
$('#notice').hide();
// Reveal the cart when there is exactly one item in the cart. Reveal the cart before the line_item is highlighted.
if ($('#cart tr').length == 1) { $('#cart').show('blind', 1000); }
// Code for AJAX request from the store index page to add item to cart.
// The following code tells the browser to replace the content whose element id is cart with that HTML.
// The jQuery library is aliased to '$', and most usages of jQuery start there.
// 1) The first call - `$('#cart')` - tells jQuery to find the HTML element that has an id of 'cart'.
// 2) The html() method (http://api.jquery.com/html/) is called with a first argument of the desired replacement for the contents of this element.
//    The content is formed by a call to the `render()` method on the @cart object.
// 3) The output of the method is processed by an `escape_javascript()` helper method, using an alias named `j()`, that converts this Ruby
//    string into a format acceptable as input to JavaScript.
// NOTE: This script is executed in the browser. The only parts executed on the server are the parts within the `<%= %>` delimiters.

$('#cart').html("<%=j render(@cart) %>");

// Identify the browser element by passing '#current_item' to the `$` function. Call the `css()` function to set the initial background color.
// Follow by calling the `animate()` method to transition back to the original color used by our layout over a period of 6000 milliseconds (6 seconds).
$('#current_item').css({'background-color':'#88ff88'}).animate({'background-color':'#114411'}, 3000);
